generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Poll {
  id             String @id @default(uuid())
  type           Int    @default(1)
  title          String
  description    String @default("")
  email          String @default("")
  slots          Slot[]
  comments       Comment[]
  votes          Vote[]
}

model Slot {
  id                      String        @id @default(uuid())
  pollId                  String
  startDate               DateTime
  startTime               String
  endDate                 DateTime
  endTime                 String
  maxParticipants         Int           @default(0)
  registered              String[]      @default([])
  waitingList             String[]      @default([])
  waitingListReregistered String[]      @default([])
  notComing               String[]      @default([])
  choices                 VoteChoice[]
  poll                    Poll          @relation(fields: [pollId], references: [id])
}

model Vote {
  id            String         @id @default(uuid())
  pollId        String
  name          String
  subscriptions Subscription[]
  choices       VoteChoice[]
  createdAt     DateTime       @default(now())
  poll          Poll           @relation(fields: [pollId], references: [id])
}

model VoteChoice {
  id     String @id @default(uuid())
  voteId String
  slotId String
  choice Int
  vote   Vote   @relation(fields: [voteId], references: [id])
  slot   Slot   @relation(fields: [slotId], references: [id])
}

model Subscription {
  endpoint String @id  @unique
  auth     String
  p256dh   String
  votes    Vote[]
}

model Comment {
  id        String @id @default(uuid())
  author    String
  text      String
  createdAt DateTime @default(now())
  pollId    String
  poll      Poll   @relation(fields: [pollId], references: [id])
}
